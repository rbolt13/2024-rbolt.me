size = 12,
family = "font",
color = col1),
# Background colors
plot.background = element_rect(fill = col2),
# Adjust Axis text
axis.text.x = element_text(vjust = -1),
# Position Legend
legend.position = "bottom")
#| code-fold: true
#| code-summary: "Show Code"
#| warning: false
ggsave(
"plot.png",
width = 35,
height = 45,
units = "cm",
dpi = 85)
caption_text <- "Randi Bolt \nApril 2024 \n#TidyTuesday \nNCAA March Madness"
#| code-fold: true
#| code-summary: "Show Code"
#| warning: false
#### Heatmap ####
# Data: data_for_heatmap_long
# Aesthetics: x = Round, y = Team (Seed), fill = difference
# Graph Colors: low = blue, high = red, midpoint = 0
# Labels: defined under Set-Up > Text.
# Add Values: If the difference is NA define as TBD, else
# round the difference to 2 decimals and add a % sign.
# Facet Wrap: by region.
# Apply minimal theme.
# Theme: title, subtitle, caption, axis titles, axis text,
# background colors, and legend position.
# heatmap
heatmap <- ggplot2::ggplot(
# Data
data_for_heatmap_long,
# Aesthetics
aes(x = ROUND,
y = TEAM_SEED,
fill = DIFFERENCE)
) +
geom_tile() +
# Graph Colors
ggplot2::scale_fill_gradient2(
low = "blue",
high = "red",
midpoint = 0
) +
# Labels
ggplot2::labs(
title = title_text,
subtitle = subtitle_text,
caption = caption_text,
x = xlab_text,
y = ylab_text,
fill = fill_text
) +
# Percentage Point Difference Values
ggplot2::geom_text(
ggplot2::aes(
label = ifelse(
is.na(DIFFERENCE), "TBD",
paste0(round(DIFFERENCE,
digits = 2),"%")
),
hjust = 0
)
) +
# Facet Wrap
facet_wrap(~ REGION, ncol = 1, scales = "free_y") +
# Apply minimal theme
ggplot2::theme_minimal() +
# Theme
ggplot2::theme(
# Title
plot.title = element_text(
size = 30,
family = "font",
face = "bold",
hjust = 0,
color = col1),
# Subtitle
plot.subtitle = element_markdown(
size = 16,
family = "font",
hjust = 0,
color = col1),
# Caption
plot.caption = element_text(
size = 12,
family = "font",
hjust = 1,
color = col1),
# Axis Titles
axis.title = element_text(
size = 24,
family = "font",
color = col1),
# X Axis Title
axis.title.x = element_text(vjust = -1.5),
# Axis Text
axis.text = element_text(
size = 12,
family = "font",
color = col1),
# Background colors
plot.background = element_rect(fill = col2),
# Adjust Axis text
axis.text.x = element_text(vjust = -1),
# Position Legend
legend.position = "bottom")
#| code-fold: true
#| code-summary: "Show Code"
#| warning: false
ggsave(
"plot.png",
width = 35,
height = 45,
units = "cm",
dpi = 85)
library(dplyr)
library(lubridate)
library(purrr)
library(gt)
library(ggplot2)
library(plotly)
Ballet <- c("Swan Lake",
"The Nutcracker",
"Giselle",
"Romeo and Juliet",
"Don Quixote",
"Cinderella ",
"La Bayadere",
"Coppelia",
"The Sleeping Beauty ",
"La Sylphide ",
"Spartacus",
"Alice's Adventures in Wonder Land",
"Firebird")
Composer <- c("Pyotr Ilyich Tchaikovsky",
"Pyotr Ilyich Tchaikovsky",
"Adolph Adam",
"Sergei Prokofiev",
"Ludwig Minkus",
"Sergei Prokofiev",
"Ludwig Minkus",
"Leo Delibes",
"Pyotr Ilyich Tchaikovsky",
"Filippo Talioni",
"Leonid Yakobson",
"Joby Talbo",
"Igor Stravinsky ")
choreographer_1 <- c("Julius Reisinger",
"Marius Petipa",
"Jean Coralli",
"Ivo Vana-Psota",
"Marius Petipa",
"Rosstislav Zakharov",
"Marius Petipa",
"Arthur Saint-Leon",
"Marius Petipa",
"Jean-Madeline Schnitzhoeffer",
"Aram Khachaturian",
"Christopoher Wheeldon",
"Michel Fokine")
choreographer_2 <- c("",
"Lev Ivanov",
"Jules Perrot",
"",
"",
"",
"",
"",
"",
"",
"",
"",
"")
Acts <- c(4, 2, 2, 4, 3, 3, 4, 2, 3, 2, 3, 3, 1)
month_premiered <- c( 3, 12, 6, 12, 12, 11, 2, 5, 1, 3, 12, 2, 6)
day_premiered <- c( 4, 18, 28, 30, 26, 21, 11, 25, 5, 12, 27, 28, 9)
year_premiered <- c(1877, 1892, 1841, 1938, 1869, 1945, 1877, 1870, 1890, 1832, 1956, 2011, 1910)
Links <- c("https://www.youtube.com/watch?v=LbUatYSm8ME",
"https://www.youtube.com/watch?v=tR_Z1LUDQuQ",
"https://www.youtube.com/watch?v=VroMXEDLTq8",
"https://www.youtube.com/watch?v=7AnpPu7j6Dg",
"https://www.youtube.com/watch?v=pazAS4cNi7w",
"https://www.youtube.com/watch?v=LPbKZXNfJ-Y",
"https://www.youtube.com/watch?v=zTR4Oco_0Bc",
"https://www.youtube.com/watch?v=uE2fjFMag7E",
"https://www.youtube.com/watch?v=EDFlRq5RnbQ",
"https://www.youtube.com/watch?v=R_RFxSLar2A",
"https://www.youtube.com/watch?v=Fha6rYtaLMk",
"https://www.youtube.com/watch?v=c2wWq25p5Sk",
"https://www.youtube.com/watch?v=Yo9L9H--t3k")
ballet_df <- base::data.frame(
Ballet,
Composer,
choreographer_1,
Acts,
date_premiered = lubridate::make_date(year_premiered,
month_premiered,
day_premiered)) %>%
dplyr::arrange(Ballet)
ballet_table <- ballet_df %>%
dplyr::mutate(
Links = map(Links, ~ htmltools::a(href = .x, "Youtube")),
Links = map(Links, ~ gt::html(as.character(.x)))) %>%
gt::gt()
ballet_plot <- ballet_df %>%
ggplot2::ggplot(mapping = aes(x = date_premiered,
y = Ballet,
color = factor(Acts))) +
ggplot2::geom_point() +
ggplot2::labs(x = "Date Premiered",
y = "Ballet",
color = "Number of Acts") +
ggplot2::ggtitle("Ballets by Date Premiered")
ballet_plot <- ballet_df %>%
ggplot2::ggplot(mapping = aes(x = date_premiered,
y = Ballet,
color = factor(Acts))) +
ggplot2::geom_point() +
ggplot2::labs(x = "Date Premiered",
y = "Ballet",
color = "Number of Acts") +
ggplot2::ggtitle("Ballets by Date Premiered")
ballet_table
ggplotly(ballet_plot)
base::library(dplyr)
library(lubridate)
library(purrr)
library(gt)
library(ggplot2)
library(plotly)
base::library(dplyr)
base::library(lubridate)
base::library(purrr)
base::library(gt)
base::library(ggplot2)
base::library(plotly)
# ggplotly(ballet_plot)
ballet_plot
?data()
knitr::opts_chunk$set(error=FALSE,
message= FALSE,
warning=FALSE)
base::library(ggplot2)
base::library(magrittr)
base::library(dplyr)
base::library(flametree)
base::library(ozmaps)
base::library(rmapshaper)
base::library(plotly)
utils::data("cars")
utils::data ("BOD")
ggplot2::ggplot(
data = mpg,
mapping = ggplot2::aes(
x = displ,
y = hwy)
) +
ggplot2::geom_point()
base::plot(mpg$displ, mpg$hwy)
base::plot(pressure$temperature, pressure$pressure, type = "l")
# add points
graphics::points(pressure$temperature, pressure$pressure)
# add lines (and points)
graphics::lines(pressure$temperature, pressure$pressure/2, col = "red")
graphics::points(pressure$temperature, pressure$pressure/2, col = "red")
ggplot2::ggplot(pressure, ggplot2::aes(x = temperature, y = pressure)) +
ggplot2::geom_line() +
ggplot2::geom_point() +
ggplot2::geom_line(ggplot2::aes(x = temperature, y = pressure/2), color = "red") +
ggplot2::geom_point(ggplot2::aes(x = temperature, y = pressure/2), color = "red")
graphics::barplot(BOD$demand, names.arg = BOD$Time)
graphics::barplot(base::table(mtcars$cyl))
ggplot2::ggplot(BOD, ggplot2::aes(x = base::factor(Time), y = demand)) +
ggplot2::geom_col()
ggplot2::ggplot(mtcars, aes(x=cyl)) +
ggplot2::geom_bar()
graphics::hist(mtcars$mpg, breaks = 4)
ggplot2::ggplot(mtcars, ggplot2::aes(x=mpg)) +
ggplot2::geom_histogram(binwidth = 4)
base::plot(ToothGrowth$supp, ToothGrowth$len)
base::plot(len ~ supp, data = ToothGrowth)
base::plot(len ~ supp + dose, data = ToothGrowth)
ggplot2::ggplot(ToothGrowth, ggplot2::aes(x= supp, y = len)) +
ggplot2::geom_boxplot()
data <- base::data.frame(
day = base::as.Date("2017-06-14")-0:364,
value = stats::runif(365)
)
utils::head(data)
ggplot2::ggplot(data, ggplot2::aes(x = day, y = value)) +
ggplot2::geom_line()
ggplot2::ggplot(data = economics, ggplot2::aes(x = date, y = pop)) +
ggplot2::geom_line()
subset <- ggplot2::economics %>%
dplyr::filter(date>base::as.Date("2006-1-1"))
ggplot2::ggplot(economics, ggplot2::aes(x = date, y = pop)) +
ggplot2::geom_line(ggplot2::aes(size = unemploy), color = "red")
or_counties <- ggplot2::map_data("county", "oregon") %>%
dplyr::select(lon = long, lat, group, id = subregion)
utils::head(or_counties)
or_counties <- ggplot2::map_data("county", "oregon") %>%
dplyr::select(lon = long, lat, group, id = subregion)
utils::head(or_counties)
fig <- plotly::plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length)
fig
knitr::opts_chunk$set(error=FALSE,
message= FALSE,
warning=FALSE,
echo=FALSE)
knitr::include_graphics("img/img6.png")
install.packages("devtools")
devtools::install_github("rbolt13/SportsObserveR")
library(SportsObserveR)
library(jasmines)
install.packages("jasmines")
library(jasmines)
# install.packages("jasmines")
library(jasmines)
install.packages("jasmines")
remotes::install_github("djnavarro/jasmines")
# remotes::install_github("djnavarro/jasmines")
library(jasmines)
library(dplyr)
stream_data  <- utils::read.csv("../../data/stream_data.csv")
stream_data  <- utils::read.csv("../../../data/stream_data.csv")
stream_data  <- utils::read.csv("../../../data/stream_data.csv")
stream_data  <- utils::read.csv("../../../../data/stream_data.csv")
stream_data
knitr::opts_chunk$set(
warning = FALSE,
message = FALSE,
fig.height = 2.5,
fig.width = 4.5,
fig.pos = "center")
# Load packages
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
# Load packages
library(tidyverse)
library(tidybayes)
install.packages(tidybayes, bayesplot, bayesrules)
install.packages(tidybayes)
install.packages("tidybayes")
install.packages("bayesrules")
install.packages("broom.mixed")
# Load packages
library(tidyverse)
library(tidybayes)
install.packages("tidybayes")
# Load packages
library(tidyverse)
library(tidybayes)
#library(tidybayes)
library(bayesrules)
library(bayesplot)
library(rstanarm)
library(broom.mixed)
install.packages("rstanarm")
install.packages("rstanarm")
# Load packages
library(tidyverse)
#library(tidybayes)
library(bayesrules)
library(bayesplot)
library(rstanarm)
library(rstanarm)
# Load packages
library(tidyverse)
#library(tidybayes)
library(bayesrules)
library(bayesplot)
# library(rstanarm)
library(broom.mixed)
plot_beta(alpha = 2, beta = 20)
plot_binomial_likelihood(y = 6, n = 10)
plot_beta_binomial(alpha = 2, beta = 20, y = 6, n = 10)
plot_beta(alpha = 1, beta = 1)
plot_beta_binomial(alpha = 1, beta = 1, y = 6, n = 10)
data("pulse_of_the_nation")
pulse_of_the_nation %>%
count(climate_change)
# first friend
plot_beta_binomial(alpha = 2, beta = 20, y = 655, n = 1000)
# second friend
plot_beta_binomial(alpha = 1, beta = 1, y = 655, n = 1000)
bayesrules::plot_beta(alpha = 20, beta = 10)
pulse_of_the_nation %>%
count(ghosts)
bayesrules::plot_beta_binomial(alpha = 20, beta = 10, y = 378, n = 1000)
reticulate::repl_python()
plotly::ggplotly(plot)
knitr::opts_chunk$set(error=FALSE,
message= FALSE,
warning=FALSE)
base::library(ggplot2)
base::library(magrittr)
base::library(dplyr)
base::library(flametree)
base::library(ozmaps)
base::library(rmapshaper)
base::library(plotly)
utils::data("cars")
utils::data ("BOD")
ggplot2::ggplot(
data = mpg,
mapping = ggplot2::aes(
x = displ,
y = hwy)
) +
ggplot2::geom_point()
base::plot(mpg$displ, mpg$hwy)
base::plot(pressure$temperature, pressure$pressure, type = "l")
# add points
graphics::points(pressure$temperature, pressure$pressure)
# add lines (and points)
graphics::lines(pressure$temperature, pressure$pressure/2, col = "red")
graphics::points(pressure$temperature, pressure$pressure/2, col = "red")
ggplot2::ggplot(pressure, ggplot2::aes(x = temperature, y = pressure)) +
ggplot2::geom_line() +
ggplot2::geom_point() +
ggplot2::geom_line(ggplot2::aes(x = temperature, y = pressure/2), color = "red") +
ggplot2::geom_point(ggplot2::aes(x = temperature, y = pressure/2), color = "red")
graphics::barplot(BOD$demand, names.arg = BOD$Time)
graphics::barplot(base::table(mtcars$cyl))
ggplot2::ggplot(BOD, ggplot2::aes(x = base::factor(Time), y = demand)) +
ggplot2::geom_col()
ggplot2::ggplot(mtcars, aes(x=cyl)) +
ggplot2::geom_bar()
graphics::hist(mtcars$mpg, breaks = 4)
ggplot2::ggplot(mtcars, ggplot2::aes(x=mpg)) +
ggplot2::geom_histogram(binwidth = 4)
base::plot(ToothGrowth$supp, ToothGrowth$len)
base::plot(len ~ supp, data = ToothGrowth)
base::plot(len ~ supp + dose, data = ToothGrowth)
ggplot2::ggplot(ToothGrowth, ggplot2::aes(x= supp, y = len)) +
ggplot2::geom_boxplot()
data <- base::data.frame(
day = base::as.Date("2017-06-14")-0:364,
value = stats::runif(365)
)
utils::head(data)
ggplot2::ggplot(data, ggplot2::aes(x = day, y = value)) +
ggplot2::geom_line()
ggplot2::ggplot(data = economics, ggplot2::aes(x = date, y = pop)) +
ggplot2::geom_line()
subset <- ggplot2::economics %>%
dplyr::filter(date>base::as.Date("2006-1-1"))
ggplot2::ggplot(economics, ggplot2::aes(x = date, y = pop)) +
ggplot2::geom_line(ggplot2::aes(size = unemploy), color = "red")
or_counties <- ggplot2::map_data("county", "oregon") %>%
dplyr::select(lon = long, lat, group, id = subregion)
utils::head(or_counties)
ggplot2::ggplot(or_counties, ggplot2::aes(lon, lat, group = group))+
ggplot2::geom_polygon(fill = "white", color = "grey") +
ggplot2::coord_quickmap()
oz_stats <- ozmaps::ozmap_states
oz_stats
ggplot2::ggplot(oz_stats)+
ggplot2::geom_sf() +
ggplot2::coord_sf()
oz_stats <- ozmaps::ozmap_states %>%
dplyr::filter(NAME != "Other Territories")
oz_votes <- rmapshaper::ms_simplify(ozmaps::abs_ced)
ggplot2::ggplot()+
ggplot2::geom_sf(data = oz_stats, mapping = ggplot2::aes(fill = NAME)) +
ggplot2::geom_sf(data = oz_votes, fill = NA) +
ggplot2::coord_sf()
fig <- plotly::plot_ly(
data = iris,
x = ~Sepal.Length,
y = ~Petal.Length)
fig
mpg %>% plotly::plot_ly(x = ~displ, y = ~mpg, color = ~class)
plot <- ggplot2::ggplot(mpg, ggplot2::aes(x = displ, y = hwy)) +
ggplot2::geom_point(mapping = aes(color = class)) +
ggplot2::geom_smooth()
plot
plotly::ggplotly(plot)
shades <- c("blue", "green", "red", "orange")
data <- flametree::flametree_grow(time = 10, trees = 10)
data %>% flametree::flametree_plot(
background = "white",
palette = shades,
style = "nativeflora"
)
library(data.tree)
library(DiagrammeR)
install.packages("DiagrammeR")
library(data.tree)
# install.packages("DiagrammeR")
library(DiagrammeR)
library(data.tree)
# install.packages("DiagrammeR")
library(DiagrammeR)
ex1 <- data.tree::Node$new("Example 1")
d <- ex1$AddChild("Uses Drug", p = 0.01)
dc <- ex1$AddChild("Does Not Use Drug", p = 0.99)
t <- d$AddChild("Positive Test", p = 0.995)
tc <- d$AddChild("Negative Test", p = 0.005)
t <- dc$AddChild("Positive Test", p = 0.015)
tc<- dc$AddChild("Negative Test", p = 0.985)
base::print(ex1, 'p')
data.tree::SetFormat(ex1, "p", formatFun = data.tree::FormatFixedDecimal(3))
base::print(ex1, 'p')
base::plot(ex1)
